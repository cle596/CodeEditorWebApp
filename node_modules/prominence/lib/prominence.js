"use strict";

var _classCallCheck = function (instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } };

var Prominence = function Prominence(context) {
  var _this = this;

  _classCallCheck(this, Prominence);

  var methods = {};

  for (var x = context; x != null; x = Object.getPrototypeOf(x)) {
    Object.getOwnPropertyNames(x).forEach(function (name) {
      if (typeof context[name] === "function") {
        methods[name] = true;
      }
    });
  }

  var proxy = function (name, args) {
    return new Promise(function (resolve, reject) {
      context[name].apply(context, args.concat(function (err, result) {
        if (err) {
          return reject(err);
        }
        return resolve(result);
      }));
    });
  };

  Object.keys(methods).forEach(function (name) {
    _this[name] = function () {
      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      return proxy(name, args);
    };
  });
};

module.exports = function (context) {
  var methodName = arguments[1] === undefined ? null : arguments[1];
  var args = arguments[2] === undefined ? [] : arguments[2];

  if (methodName === null) {
    return new Prominence(context);
  }
  return new Promise(function (resolve, reject) {
    context[methodName].apply(context, args.concat(function (err, result) {
      if (err) {
        return reject(err);
      }
      return resolve(result);
    }));
  });
};