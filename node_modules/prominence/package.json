{
  "name": "prominence",
  "description": "Call a callback-based function as ES6 Promise",
  "version": "0.2.0",
  "author": {
    "name": "Nao Yonamine",
    "email": "mohayonao@gmail.com"
  },
  "bugs": {
    "url": "https://github.com/mohayonao/prominence/issues"
  },
  "devDependencies": {
    "babel": "^4.7.8",
    "isparta": "^2.2.0",
    "jshint": "^2.6.3",
    "jshint-stylish": "^1.0.1",
    "mocha": "^2.2.1"
  },
  "files": [
    "package.json",
    "README.md",
    "lib"
  ],
  "homepage": "https://github.com/mohayonao/prominence/",
  "keywords": [
    "webaudioapi",
    "buffer"
  ],
  "licenses": "MIT",
  "main": "./lib/prominence.js",
  "repository": {
    "type": "git",
    "url": "https://github.com/mohayonao/prominence.git"
  },
  "scripts": {
    "build": "babel src --out-dir lib",
    "cover": "babel-node node_modules/.bin/isparta cover --report text --report html --report lcov node_modules/.bin/_mocha",
    "lint": "jshint src test --reporter node_modules/jshint-stylish/stylish.js",
    "test": "mocha",
    "travis": "npm run lint && npm run test"
  },
  "readme": "# prominence\n[![Build Status](http://img.shields.io/travis/mohayonao/prominence.svg?style=flat-square)](https://travis-ci.org/mohayonao/prominence)\n[![NPM Version](http://img.shields.io/npm/v/prominence.svg?style=flat-square)](https://www.npmjs.org/package/prominence)\n[![License](http://img.shields.io/badge/license-MIT-brightgreen.svg?style=flat-square)](http://mohayonao.mit-license.org/)\n\n> Call a callback-based function as ES6 Promise\n\n## Installation\n\n### NPM\n\n```\nnpm install prominence\n```\n\n## API\n\n- `prominenct(context: object): Prominence`\n- `prominence(context: object, methodName: string, [ args: any[] ]): Promise<any>`\n\n## Examples\n\nES6 Promise\n\n```js\nimport fs from \"fs\";\nimport prominence from \"prominence\";\n\n// use Prominence proxy\nprominence(fs).readFile(filepath, \"utf-8\").then((text) => {\n  console.log(text);\n}).catch(console.error.bind(console));\n\n// not use a proxy\nprominence(fs, \"readFile\", [ filepath, \"utf-8\" ]).then((text) => {\n  console.log(text);\n}).catch(console.error.bind(console));\n```\n\nES7 Async/Await\n\n```js\nimport fs from \"fs\";\nimport prominence from \"prominence\";\n\n// use Prominence Proxy\nasync (filepath) => {\n  let text = await prominence(fs).readFile(filepath, \"utf-8\");\n\n  console.log(text);\n};\n\n// not use a proxy\nasync (filepath) => {\n  let text = await prominence(fs, \"readFile\", [ filepath, \"utf-8\" ]);\n\n  console.log(text);\n};\n```\n\n## Contributing\n\n1. [Fork it!](https://github.com/mohayonao/prominence/fork)\n2. Create your feature branch: `git checkout -b my-new-feature`\n3. Commit your changes: `git commit -am 'Add some feature'`\n4. Push to the branch: `git push origin my-new-feature`\n5. Submit a pull request :D\n\n## License\n\n[MIT](http://mohayonao.mit-license.org/)\n",
  "readmeFilename": "README.md",
  "_id": "prominence@0.2.0",
  "dist": {
    "shasum": "ad11e0e47e225123a5b3d81e37c1f40dc5d40bfd"
  },
  "_from": "prominence@",
  "_resolved": "https://registry.npmjs.org/prominence/-/prominence-0.2.0.tgz"
}
